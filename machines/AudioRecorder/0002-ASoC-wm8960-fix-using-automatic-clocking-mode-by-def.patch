From 278436e054a0c90dab38e8e5827f9aa08edcbcd9 Mon Sep 17 00:00:00 2001
From: Ben Wolsieffer <benwolsieffer@gmail.com>
Date: Sun, 6 Jun 2021 13:09:20 -0400
Subject: [PATCH 2/3] ASoC: wm8960: fix using automatic clocking mode by
 default

Commit 2bbc2df46e67 ("ASoC: wm8960: Make automatic the default clocking
mode") made automatic sysclk mode the default by rearranging the
WM8960_SYSCLK_* constants so WM8960_SYSCLK_AUTO is zero.  This is not
quite correct because WM8960_SYSCLK_MCLK and WM8960_SYSCLK_PLL are
register bit values (see their usage in wm8960_set_dai_sysclk()), which
cannot be changed arbitrarily. Confusingly, WM8960_SYSCLK_AUTO is not a
register value, but was tacked on as a sentinel value to automatically
select MCLK or PLL mode.

Fix this confusing situation by adding a wm8960_sysclk_src enum which is
used as the clk_id separate from the register bit definitions, following
the example of other drivers.

Lastly, use WM8960_SYSCLK_MCLK and WM8960_SYSCLK_PLL for their intended
purpose to replace magic constants in wm8960_set_pll().

Fixes: 2bbc2df46e67 ("ASoC: wm8960: Make automatic the default clocking mode")
Signed-off-by: Ben Wolsieffer <benwolsieffer@gmail.com>
---
 sound/soc/codecs/wm8960.c     | 24 ++++++++++++------------
 sound/soc/codecs/wm8960.h     |  9 +++++++--
 sound/soc/fsl/fsl-asoc-card.c |  4 ++--
 3 files changed, 21 insertions(+), 16 deletions(-)

diff --git a/sound/soc/codecs/wm8960.c b/sound/soc/codecs/wm8960.c
index 28bc5e5040fc..4b384620b520 100644
--- a/sound/soc/codecs/wm8960.c
+++ b/sound/soc/codecs/wm8960.c
@@ -774,7 +774,7 @@ static int wm8960_configure_clocking(struct snd_soc_component *component)
 		return 0;
 	}
 
-	if (wm8960->clk_id != WM8960_SYSCLK_MCLK && !wm8960->freq_in) {
+	if (wm8960->clk_id != WM8960_SYSCLK_SRC_MCLK && !wm8960->freq_in) {
 		dev_err(component->dev, "No MCLK configured\n");
 		return -EINVAL;
 	}
@@ -786,7 +786,7 @@ static int wm8960_configure_clocking(struct snd_soc_component *component)
 	 * directly. Otherwise, auto select a available pll out frequency
 	 * and set PLL.
 	 */
-	if (wm8960->clk_id == WM8960_SYSCLK_AUTO) {
+	if (wm8960->clk_id == WM8960_SYSCLK_SRC_AUTO) {
 		/* disable the PLL and using MCLK to provide sysclk */
 		wm8960_set_pll(component, 0, 0);
 		freq_out = freq_in;
@@ -797,11 +797,11 @@ static int wm8960_configure_clocking(struct snd_soc_component *component)
 		return -EINVAL;
 	}
 
-	if (wm8960->clk_id != WM8960_SYSCLK_PLL) {
+	if (wm8960->clk_id != WM8960_SYSCLK_SRC_PLL) {
 		ret = wm8960_configure_sysclk(wm8960, freq_out, &i, &j, &k);
 		if (ret >= 0) {
 			goto configure_clock;
-		} else if (wm8960->clk_id != WM8960_SYSCLK_AUTO) {
+		} else if (wm8960->clk_id != WM8960_SYSCLK_SRC_AUTO) {
 			dev_err(component->dev, "failed to configure clock\n");
 			return -EINVAL;
 		}
@@ -949,7 +949,7 @@ static int wm8960_set_bias_level_out3(struct snd_soc_component *component,
 			 * If it's sysclk auto mode, and the pll is enabled,
 			 * disable the pll
 			 */
-			if (wm8960->clk_id == WM8960_SYSCLK_AUTO && (pm2 & 0x1))
+			if (wm8960->clk_id == WM8960_SYSCLK_SRC_AUTO && (pm2 & 0x1))
 				wm8960_set_pll(component, 0, 0);
 
 			if (!IS_ERR(wm8960->mclk))
@@ -1075,7 +1075,7 @@ static int wm8960_set_bias_level_capless(struct snd_soc_component *component,
 			 * If it's sysclk auto mode, and the pll is enabled,
 			 * disable the pll
 			 */
-			if (wm8960->clk_id == WM8960_SYSCLK_AUTO && (pm2 & 0x1))
+			if (wm8960->clk_id == WM8960_SYSCLK_SRC_AUTO && (pm2 & 0x1))
 				wm8960_set_pll(component, 0, 0);
 
 			if (!IS_ERR(wm8960->mclk))
@@ -1224,7 +1224,7 @@ static int wm8960_set_pll(struct snd_soc_component *component,
 
 	/* Disable the PLL: even if we are changing the frequency the
 	 * PLL needs to be disabled while we do so. */
-	snd_soc_component_update_bits(component, WM8960_CLOCK1, 0x1, 0);
+	snd_soc_component_update_bits(component, WM8960_CLOCK1, 0x1, WM8960_SYSCLK_MCLK);
 	snd_soc_component_update_bits(component, WM8960_POWER2, 0x1, 0);
 
 	if (!freq_in || !freq_out)
@@ -1246,7 +1246,7 @@ static int wm8960_set_pll(struct snd_soc_component *component,
 	/* Turn it on */
 	snd_soc_component_update_bits(component, WM8960_POWER2, 0x1, 0x1);
 	msleep(250);
-	snd_soc_component_update_bits(component, WM8960_CLOCK1, 0x1, 0x1);
+	snd_soc_component_update_bits(component, WM8960_CLOCK1, 0x1, WM8960_SYSCLK_PLL);
 
 	return 0;
 }
@@ -1259,7 +1259,7 @@ static int wm8960_set_dai_pll(struct snd_soc_dai *codec_dai, int pll_id,
 
 	wm8960->freq_in = freq_in;
 
-	if (pll_id == WM8960_SYSCLK_AUTO)
+	if (pll_id == WM8960_SYSCLK_SRC_AUTO)
 		return 0;
 
 	return wm8960_set_pll(component, freq_in, freq_out);
@@ -1314,15 +1314,15 @@ static int wm8960_set_dai_sysclk(struct snd_soc_dai *dai, int clk_id,
 	struct wm8960_priv *wm8960 = snd_soc_component_get_drvdata(component);
 
 	switch (clk_id) {
-	case WM8960_SYSCLK_MCLK:
+	case WM8960_SYSCLK_SRC_MCLK:
 		snd_soc_component_update_bits(component, WM8960_CLOCK1,
 					0x1, WM8960_SYSCLK_MCLK);
 		break;
-	case WM8960_SYSCLK_PLL:
+	case WM8960_SYSCLK_SRC_PLL:
 		snd_soc_component_update_bits(component, WM8960_CLOCK1,
 					0x1, WM8960_SYSCLK_PLL);
 		break;
-	case WM8960_SYSCLK_AUTO:
+	case WM8960_SYSCLK_SRC_AUTO:
 		break;
 	default:
 		return -EINVAL;
diff --git a/sound/soc/codecs/wm8960.h b/sound/soc/codecs/wm8960.h
index e8ff33b188e9..eb5e21611a15 100644
--- a/sound/soc/codecs/wm8960.h
+++ b/sound/soc/codecs/wm8960.h
@@ -77,9 +77,8 @@
 #define WM8960_SYSCLK_DIV_1		(0 << 1)
 #define WM8960_SYSCLK_DIV_2		(2 << 1)
 
-#define WM8960_SYSCLK_AUTO		(0 << 0)
+#define WM8960_SYSCLK_MCLK		(0 << 0)
 #define WM8960_SYSCLK_PLL		(1 << 0)
-#define WM8960_SYSCLK_MCLK		(2 << 0)
 
 #define WM8960_DAC_DIV_1		(0 << 3)
 #define WM8960_DAC_DIV_1_5		(1 << 3)
@@ -108,4 +107,10 @@
 #define WM8960_OPCLK_DIV_5_5		(4 << 0)
 #define WM8960_OPCLK_DIV_6		(5 << 0)
 
+enum wm8960_sysclk_src {
+	WM8960_SYSCLK_SRC_AUTO = 0,
+	WM8960_SYSCLK_SRC_MCLK,
+	WM8960_SYSCLK_SRC_PLL,
+};
+
 #endif
diff --git a/sound/soc/fsl/fsl-asoc-card.c b/sound/soc/fsl/fsl-asoc-card.c
index a0c2ce84c32b..e326d80c17ef 100644
--- a/sound/soc/fsl/fsl-asoc-card.c
+++ b/sound/soc/fsl/fsl-asoc-card.c
@@ -778,8 +778,8 @@ static int fsl_asoc_card_probe(struct platform_device *pdev)
 		priv->dai_fmt |= SND_SOC_DAIFMT_CBP_CFP;
 	} else if (of_device_is_compatible(np, "fsl,imx-audio-wm8960")) {
 		codec_dai_name[0] = "wm8960-hifi";
-		priv->codec_priv[0].fll_id = WM8960_SYSCLK_AUTO;
-		priv->codec_priv[0].pll_id = WM8960_SYSCLK_AUTO;
+		priv->codec_priv[0].fll_id = WM8960_SYSCLK_SRC_AUTO;
+		priv->codec_priv[0].pll_id = WM8960_SYSCLK_SRC_AUTO;
 		priv->dai_fmt |= SND_SOC_DAIFMT_CBP_CFP;
 	} else if (of_device_is_compatible(np, "fsl,imx-audio-ac97")) {
 		codec_dai_name[0] = "ac97-hifi";
-- 
2.51.1

